const {express, connection, mysql, app} = require('./connexion');

function validateNom(){
    let nomRegExp = new RegExp('^[a-zA-Z-]{3,}$', 'g');
    let testNom = nomRegExp.test();
    if (testNom) {
        console.log('Nom valide');
    }else{
        console.log('Nom invalide');
    }
}
function apostrophe(change) {
    let apos = change.split("'").join("&rsquo;")
    if (apos) {
        console.log('ok');
    }
    return apos;
}
    
// import connection from 'node_modules/connexion.js';
// connection.connection();

// connection.connect(function(err){
//     if (err) throw err;
//     console.log("Connected!");

// Middleware
app.use(express.json());

app.post('/restaurant', (req, res) =>{
    let sql = "INSERT INTO restaurants (name, city, nbcouverts, terrasse, parking) " + "VALUES ('" + req.body.name + "', '"
                        + req.body.city + "', '"
                        + req.body.nbcouverts + "', '"
                        + req.body.terrasse + "', '"
                        + req.body.parking + "')";
    connection.query(sql, function(err, results){
        if (err) throw err;
        console.log("Insert a record !");
    });
    res.status(200);
});

app.get('/restaurants', (req, res) => {
    var sql_template = "Select * From ?? ";
    var replaces = ['restaurants'];

    sql = mysql.format(sql_template, replaces);

    connection.query(sql, function(err, rows){
        if (err) throw err;
        res.send(rows)
    });
    res.status(200);
});

app.get('/restaurants/:id',  (req, res) => {
    let id = parseInt(req.params.id);

    let sql_template = "Select * From ?? WHERE ?? = " + id;
    let replaces = ['restaurants', 'id_restaurants'];

    sql = mysql.format(sql_template, replaces);

    connection.query(sql, function(err, row, fields){
        if (err) throw err;
        res.send(row);
    });
    res.status(200);
});

app.put('/restaurants/:id', (req, res) => {
    let id = parseInt(req.params.id);

    let sql_template = "Update ?? Set name = '" + req.body.name + "', city = '"+ req.body.city +"', nbcouverts = '"+ req.body.nbcouverts+"', terrasse = '"+ req.body.terrasse + "', parking = '"+req.body.parking + "' WHERE ?? = "+id;
    let replaces = ['restaurants', 'id_restaurants'];

    sql = mysql.format(sql_template, replaces);
    connection.query(sql, function(err, row, fields){
        if (err) throw err;
        res.send(row);
    });

    res.status(200);
});

app.delete('/restaurant/:id', (req, res) => {
    let id = parseInt(req.params.id);
console.log("delete resto" + id);
    let sql_template = "Delete From ?? WHERE ?? = "+id;
    let replaces = ['restaurants', 'id_restaurants'];

    sql = mysql.format(sql_template, replaces);
    connection.query(sql, function(err, row, fields){
        if (err) throw err;
        // res.send(row);
        console.log("resto supprimÃ©");
    });
    let sql_template1 = "Delete From ?? WHERE ?? =" + id;
    let replaces1 = ['employes', 'restaurant_id'];

    sql1 = mysql.format(sql_template1, replaces1);
    connection.query(sql1, function(err, row, fields){
        if (err) throw err;
        res.send(row);
    });
    res.status(200);
});

app.delete('/restaurants/:id', (req, res) => {
    let id = parseInt(req.params.id);
console.log("delete resto" + id);
    let sql_template = "Delete From ??, ?? USING ?? INNER JOIN ?? WHERE ??.?? = "+id+" OR ??.?? = "+id;
    let replaces = ['restaurants', 'employes', 'restaurants', 'employes', 'restaurants', 'id_restaurants', 'employes', 'restaurant_id', 'id_restaurants'];

    sql = mysql.format(sql_template, replaces);
    connection.query(sql, function(err, row, fields){
        if (err) throw err;
        res.send(row);
    });
    res.status(200);
});

app.post('/restaurants/:id/employe', (req, res) => {
    let id = parseInt(req.params.id);

    let sql = "INSERT INTO employes (first_name, last_name, hire_date, restaurant_id) " + "VALUES ('" + req.body.first_name + "', '"
    + req.body.last_name + "', '"
    + req.body.hire_date + "', '"
    + id + "')";

    connection.query(sql, function(err, results){
        if (err) throw err;
        console.log("Insert a record !");
});

    res.status(200);
});

app.get('/restaurants/:id/employes', (req, res) => {
    let id = parseInt(req.params.id);
    var sql_template = "Select id_employes, first_name, last_name, hire_date, restaurant_id, name, city, nbcouverts, terrasse, parking From ?? Join ?? ON ?? = ??.?? WHERE ?? = "+id;
    var replaces = ['employes', 'restaurants', 'restaurant_id', 'restaurants', 'id_restaurants', 'restaurant_id'];

    sql = mysql.format(sql_template, replaces);

    connection.query(sql, function(err, rows){
        if (err) throw err;
        res.send(rows)
    });
    res.status(200);
});

app.get('/restaurants/:id/employes/:idEmploye', (req, res) => {
    let id = parseInt(req.params.id);
    let idEmploye = parseInt(req.params.idEmploye);

    var sql_template = "Select first_name, last_name, hire_date, restaurant_id, name, city  From ?? Join ?? ON ?? = ??.?? WHERE ?? = "+id +" AND ?? = "+idEmploye;
    var replaces = ['employes', 'restaurants', 'restaurant_id', 'restaurants', 'id_restaurants', 'restaurant_id', 'id_employes'];

    sql = mysql.format(sql_template, replaces);

    connection.query(sql, function(err, rows){
        if (err) throw err;
        res.send(rows)
    });
    res.status(200);
});

app.put('/restaurants/:id/employes/:idEmploye', (req, res) => {
    let id = parseInt(req.params.id);
    let idEmploye = parseInt(req.params.idEmploye);

    let sql_template = "Update ?? Set first_name = '" + req.body.first_name + "', last_name = '"+ req.body.last_name +"', hire_date = '"+ req.body.hire_date+"' WHERE ?? = "+id +" AND ?? = "+idEmploye;
    let replaces = ['employes', 'restaurant_id', 'id_employes'];

    sql = mysql.format(sql_template, replaces);
    connection.query(sql, function(err, row, fields){
        if (err) throw err;
        res.send(row);
    });

    res.status(200);
});

app.delete('/restaurants/:id/employes/:idEmploye', function (req, res){
    let id = parseInt(req.params.id);
    let idEmploye = parseInt(req.params.idEmploye);

    let sql_template = "Delete From ?? WHERE ?? = "+id +" AND ?? = "+idEmploye;
    let replaces = ['employes', 'restaurant_id', 'id_employes'];

    sql = mysql.format(sql_template, replaces);
    connection.query(sql, function(err, row, fields){
        if (err) throw err;
        res.send(row);
    });
    res.status(200);
});

app.get('/employes', (req, res) => {
    var sql_template = "Select * From ?? ";
    var replaces = ['employes'];

    sql = mysql.format(sql_template, replaces);

    connection.query(sql, function(err, rows){
        if (err) throw err;
        res.send(rows)
        console.log("getEmployes");
    });
    res.status(200);
});

app.get('/restaurants&employes', (req, res) => {
    let id = parseInt(req.params.id);
    var sql_template = "Select id_employes, first_name, last_name, hire_date, id_restaurants, name, city, nbcouverts, terrasse, parking From ?? Join ?? ON ?? = ??.??";
    var replaces = ['restaurants', 'employes', 'id_restaurants', 'employes', 'restaurant_id'];

    sql = mysql.format(sql_template, replaces);

    connection.query(sql, function(err, rows){
        if (err) throw err;
        res.send(rows)
        console.log("getRestos&Employes");
    });
    res.status(200);
});

app.delete('/employe/:id', (req, res) => {
    let id = parseInt(req.params.id);

    let sql_template = "Delete From ?? WHERE ?? = "+id;
    let replaces = ['employes', 'id_employes'];

    sql = mysql.format(sql_template, replaces);
    connection.query(sql, function(err, row, fields){
        if (err) throw err;
        res.send(row);
    });
    res.status(200);
});
app.post('/employe', (req, res) => {
    validateNom(req.body.first_name);
    validateNom(req.body.last_name);
    apostrophe(req.body.first_name);
    console.log(validateNom);

    let sql = "INSERT INTO employes (first_name, last_name, hire_date, restaurant_id) " + "VALUES ('" + req.body.first_name + "\', '"
    + req.body.last_name + "', '"
    + req.body.hire_date + "', '"
    + req.body.restaurant_id + "')";

    connection.query(sql, function(err, results){
        if (err) throw err;
        console.log("Insert a record !");
});

    res.status(200);
});
// });